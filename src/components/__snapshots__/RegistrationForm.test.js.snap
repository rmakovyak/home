// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render a RegistrationForm 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegistrationForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ProgressBar
          level={0}
/>,
        <div
          className="RegistrationForm__group"
>
          <label>
                    Name
          </label>
          <input
                    name="name"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
          <p
                    className="RegistrationForm__error"
          />
</div>,
        false,
        false,
        false,
        false,
        <div
          className="RegistrationForm__control"
>
          <button
                    onClick={[Function]}
                    type="submit"
          >
                    Next
          </button>
</div>,
      ],
      "className": "RegistrationForm",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "level": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Name
</label>,
            <input
              name="name"
              onChange={[Function]}
              type="text"
              value=""
/>,
            <p
              className="RegistrationForm__error"
/>,
          ],
          "className": "RegistrationForm__group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name",
            },
            "ref": null,
            "rendered": "Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "name",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "RegistrationForm__error",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
      false,
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <button
              onClick={[Function]}
              type="submit"
>
              Next
</button>,
          ],
          "className": "RegistrationForm__control",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Next",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Next",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ProgressBar
            level={0}
/>,
          <div
            className="RegistrationForm__group"
>
            <label>
                        Name
            </label>
            <input
                        name="name"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
            <p
                        className="RegistrationForm__error"
            />
</div>,
          false,
          false,
          false,
          false,
          <div
            className="RegistrationForm__control"
>
            <button
                        onClick={[Function]}
                        type="submit"
            >
                        Next
            </button>
</div>,
        ],
        "className": "RegistrationForm",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "level": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Name
</label>,
              <input
                name="name"
                onChange={[Function]}
                type="text"
                value=""
/>,
              <p
                className="RegistrationForm__error"
/>,
            ],
            "className": "RegistrationForm__group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Name",
              },
              "ref": null,
              "rendered": "Name",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "name",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "RegistrationForm__error",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
        false,
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <button
                onClick={[Function]}
                type="submit"
>
                Next
</button>,
            ],
            "className": "RegistrationForm__control",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Next",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Next",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
